services:
  mysql:
    image: mysql:8.0
    container_name: mysql_capstoneHEJZ
    restart: always
    env_file:
      - .env
    ports:
      - "3310:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - capstoneHEJZ_network
    healthcheck: # 컨테이너 상태 확인
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  backend:
    build: .
    container_name: springboot_capstoneHEJZ
    restart: always
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_MODEL: ${OPENAI_API_MODEL}
      SPRING_PROFILES_ACTIVE: dev
      SUNO_API_KEY: ${SUNO_API_KEY}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_MS: ${JWT_EXPIRES_MS}
    networks:
      - capstoneHEJZ_network
    volumes:
      - ./music:/app/music

volumes:
  mysql_data:


networks:
  capstoneHEJZ_network:
    driver: bridge